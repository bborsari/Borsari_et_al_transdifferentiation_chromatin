#*****
# 1. merge rep.1 and rep.2
paste <(tail -n+2 ../cEBPa.R1.matrix.tsv) <(tail -n+2 ../cEBPa.R2.matrix.tsv | cut -f2-) | sed '1igene_id\tH000.2T\tH003.2T\tH006.2T\tH009.2T\tH012.2T\tH018.2T\tH024.2T\tH036.2T\tH048.2T\tH072.2T\tH120.2T\tH168.2T\tH000.3T\tH003.3T\tH006.3T\tH009.3T\tH012.3T\tH018.3T\tH024.3T\tH036.3T\tH048.3T\tH072.3T\tH120.3T\tH168.3T' > cEBPa.R1.R2.matrix.tsv &&
#*****

#*****
# 2. run QN on merged matrix
~/software/R-3.5.2/bin/Rscript /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/quantile.normalization.R cEBPa.R1.R2.matrix.tsv > cEBPa.R1.R2.matrix.after.QN.merged.tsv &&
#*****

#*****
# 3. split joint matrix into rep. 1 and rep. 2 matrices
awk 'BEGIN{FS=OFS="\t"}{if (NR==1){print "gene_id", $0} else {print $0}}' cEBPa.R1.R2.matrix.after.QN.merged.tsv | cut -f-13 | sed '1s/gene_id\t//' > cEBPa.R1.matrix.after.QN.merged.tsv &&
awk 'BEGIN{FS=OFS="\t"}{if (NR==1){print "gene_id", $0} else {print $0}}' cEBPa.R1.R2.matrix.after.QN.merged.tsv | cut -f1,14- | sed '1s/gene_id\t//' > cEBPa.R2.matrix.after.QN.merged.tsv &&
#*****

#*****
# 4. take the average of replicate 1 and 2
~/software/R-3.5.2/bin/Rscript /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/matrix_matrix_mean.R -a cEBPa.R1.matrix.after.QN.merged.tsv -b cEBPa.R2.matrix.after.QN.merged.tsv -o cEBPa.matrix.after.QN.merged.tsv -r 2 &&
awk 'BEGIN{FS=OFS="\t"}{if (NR==1){for (i=1; i<=NF; i++){split($i, a, "."); $i=a[1]}; print $0} else {split($1, b, "."); $1=b[1]; print $0}}' cEBPa.matrix.after.QN.merged.tsv > tmp; mv tmp cEBPa.matrix.after.QN.merged.tsv &&
#*****

#*****
# 5. run maSigPro
~/software/R-3.5.2/bin/Rscript /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/maSigPro.wrapper.R --rep1 cEBPa.R1.matrix.after.QN.merged.tsv --rep2 cEBPa.R2.matrix.after.QN.merged.tsv -o cEBPa.QN.merged.maSigPro.out.tsv &&
#*****

#*****
# 6. final cEBPa matrix
/no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/selectMatrixRows.sh <(tail -n+2 /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/analysis/all.marks/expression/QN.merged/expression.QN.merged.maSigPro.out.tsv | cut -f1) cEBPa.matrix.after.QN.merged.tsv > cEBPa.matrix.tsv &&
#*****

#*****
# 7. number of genes that are variable out of the 8129 genes selected according to expression
grep -Ff <(tail -n+2 cEBPa.QN.merged.maSigPro.out.tsv | cut -f1 | cut -f1 -d ".") cEBPa.matrix.tsv | wc -l &&
#*****

#*****
# 8. select genes with a peak in the region of interest in at least one time point

# 8.1. load conda env
conda activate ERC_human &&

# 8.2. define regions of interest
# gene body --> K36me3, K20me1, cEBPa
# [-2 Kb, +2 Kb] --> all other marks
myBed="/no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/analysis/all.marks/bed.files/gene.body.bed" &&

# 8.3. compute intersection
cat ../cEBPa.Zerone.peaks.txt | while read file; do bedtools intersect -a $myBed -b $file; done | cut -f7 | sort -u | cut -d "." -f1 > all.genes.intersecting.peaks.tsv &&
grep -Fx -f all.genes.intersecting.peaks.tsv <(tail -n+2 expression.matrix.tsv | cut -f1) > genes.intersecting.peaks.tsv
#*****

