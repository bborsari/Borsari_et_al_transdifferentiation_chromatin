#******
# 1. prepare folders for logs and errors
# mkdir logs erros
#******

#******
# 2. load conda environment
# conda activate ERC_human &&
#******

#******
# 3. define bedfile for this mark
# myBed="/no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/analysis/all.marks/bed.files/non.redundant.TSS.2Kb.up.down.bed" &&
#******

#******
# 4. list pileup bw files
# grep H3K4me2X1 /no_backup_isis/rg/projects/ERC/human/chipseq/2018-01-19.chip-nf/chipseq-pipeline.db | grep pileup | sort -k1,1 | cut -f2 > H3K4me2.R1.pileup.bw.txt &&
# grep H3K4me2X2 /no_backup_isis/rg/projects/ERC/human/chipseq/2018-01-19.chip-nf/chipseq-pipeline.db | grep pileup | sort -k1,1 | cut -f2 > H3K4me2.R2.pileup.bw.txt &&
#******

#******
# 5. list Zerone peak calling files
# grep H3K4me2 /no_backup_isis/rg/projects/ERC/human/chipseq/2018-01-19.chip-nf/chipseq-pipeline.db | grep erone_merged | sort -k1 | cut -f2 > H3K4me2.Zerone.peaks.txt &&
#******

#******
# 6. prepare folder for bwtool analysis
# mkdir bwtool &&
#******

#******
# 7. get mark matrix

# 7.1. rep. 1 
# /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/get.matrix.chipseq.sh --bedfile $myBed --bw H3K4me2.R1.pileup.bw.txt --target H3K4me2 --outFolder bwtool --signal mean --peaks H3K4me2.Zerone.peaks.txt --keep yes --outFile H3K4me2.R1.matrix.tsv &&

# 7.2. clean-up
# mkdir coordinates.bed &&
# mv *.intersection.bed coordinates.bed/ &&
# rm H3K4me2.path.* &&

# 7.3. rep. 2
# /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/get.matrix.chipseq.sh --bedfile $myBed --bw H3K4me2.R2.pileup.bw.txt --target H3K4me2 --outFolder bwtool --signal mean --peaks H3K4me2.Zerone.peaks.txt --keep yes --outFile H3K4me2.R2.matrix.tsv &&

# 7.4. clean-up
# rm *.intersection.bed &&
# rm H3K4me2.path.*
#*****

#*****
# 8. prepare folder 
# to store results of 
# intersecting Zerone peaks
# mkdir Zerone &&
#*****

#*****
# 9. Intersect Zerone peaks 
# against the genomic interval
# [1st region of interest (-2 Kb of 1st TSS), last TTS] 
# all time-points

# 9.1. define myRange
# (2000 for all marks except K36me3, K20me1 --> 0)
# myRange=2000 &&

# 9.2. run intersection
# cat H3K4me2.Zerone.peaks.txt | while read file; do bedtools intersect -a <(awk -v myRange=$myRange 'BEGIN{FS=OFS="\t"}{if ($6=="+") {$2=$2-myRange} else {$3=$3+myRange}; print $0}' /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/analysis/all.marks/bed.files/gene.body.bed) -b $file > Zerone/"$(basename $file)".intersectBed.bed; done
#*****

#*****
# 10. compress log files of permutations 

# 10.1. generate folder for logs of NW.pr permutations
mkdir logs/NW.pr.permutations &&

# 10.2. move log files of NW.pr permutations to logs/NW.pr.permutations
mv logs/NW.alignment.permutations.job.array.* logs/NW.pr.permutations/ &&

# 10.3. compress the folder
tar -zcvf logs/NW.pr.permutations.tar.gz logs/NW.pr.permutations
#*****
