#*****
# 1. merge rep.1 and rep.2
# paste <(tail -n+2 ../H4K20me1.R1.matrix.tsv) <(tail -n+2 ../H4K20me1.R2.matrix.tsv | cut -f2-) | sed '1igene_id\tH000.2T\tH003.2T\tH006.2T\tH009.2T\tH012.2T\tH018.2T\tH024.2T\tH036.2T\tH048.2T\tH072.2T\tH120.2T\tH168.2T\tH000.3T\tH003.3T\tH006.3T\tH009.3T\tH012.3T\tH018.3T\tH024.3T\tH036.3T\tH048.3T\tH072.3T\tH120.3T\tH168.3T' > H4K20me1.R1.R2.matrix.tsv &&
#*****

#*****
# 2. run QN on merged matrix
# ~/software/R-3.5.2/bin/Rscript /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/quantile.normalization.R H4K20me1.R1.R2.matrix.tsv > H4K20me1.R1.R2.matrix.after.QN.merged.tsv &&
#*****

#*****
# 3. split joint matrix into rep. 1 and rep. 2 matrices
# awk 'BEGIN{FS=OFS="\t"}{if (NR==1){print "gene_id", $0} else {print $0}}' H4K20me1.R1.R2.matrix.after.QN.merged.tsv | cut -f-13 | sed '1s/gene_id\t//' > H4K20me1.R1.matrix.after.QN.merged.tsv &&
# awk 'BEGIN{FS=OFS="\t"}{if (NR==1){print "gene_id", $0} else {print $0}}' H4K20me1.R1.R2.matrix.after.QN.merged.tsv | cut -f1,14- | sed '1s/gene_id\t//' > H4K20me1.R2.matrix.after.QN.merged.tsv &&
#*****

#*****
# 4. take the average of replicate 1 and 2
# ~/software/R-3.5.2/bin/Rscript /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/matrix_matrix_mean.R -a H4K20me1.R1.matrix.after.QN.merged.tsv -b H4K20me1.R2.matrix.after.QN.merged.tsv -o H4K20me1.matrix.after.QN.merged.tsv -r 2 &&
# awk 'BEGIN{FS=OFS="\t"}{if (NR==1){for (i=1; i<=NF; i++){split($i, a, "."); $i=a[1]}; print $0} else {split($1, b, "."); $1=b[1]; print $0}}' H4K20me1.matrix.after.QN.merged.tsv > tmp; mv tmp H4K20me1.matrix.after.QN.merged.tsv &&
#*****

#*****
# 5. run maSigPro
# ~/software/R-3.5.2/bin/Rscript /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/maSigPro.wrapper.R --rep1 H4K20me1.R1.matrix.after.QN.merged.tsv --rep2 H4K20me1.R2.matrix.after.QN.merged.tsv -o H4K20me1.QN.merged.maSigPro.out.tsv &&
#*****

#*****
# 6. final H4K20me1 matrix
# /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/selectMatrixRows.sh <(tail -n+2 ../../expression/QN.merged/expression.QN.merged.maSigPro.out.tsv | cut -f1) H4K20me1.matrix.after.QN.merged.tsv > H4K20me1.matrix.tsv &&
#*****

#*****
# 7. number of genes that are variable out of the 8129 genes selected according to expression
# grep -Ff <(tail -n+2 H4K20me1.QN.merged.maSigPro.out.tsv | cut -f1 | cut -f1 -d ".") H4K20me1.matrix.tsv | wc -l
#*****

#*****
# 8. compute peak length per gene in the different time points + gene length

# 8.1. peak length at 0h
# /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/join.py -b <(tail -n+2 metadata.tsv | cut -f1) -a <(cat ../Zerone/H000H4K20me1_zerone_merged.bed.intersectBed.bed | awk '{print ($3-$2)"\t"$4}'| cut -d "." -f1 | awk '{print $2"\t"$1}' | awk '{a[$1]+=$2}END{for(k in a)print k"\t"a[k]}') -u -p 0 | sed '1iH000' > all.tp.peak.length.QN.merged.tsv &&

# 8.2. peak length at other 11 time-points
# for time in H003 H006 H009 H012 H018 H024 H036 H048 H072 H120 H168; do
# 	/no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/join.py -b all.tp.peak.length.QN.merged.tsv -a <(cat ../Zerone/"$time"H4K20me1_zerone_merged.bed.intersectBed.bed | awk '{print ($3-$2)"\t"$4}'| cut -d "." -f1 | awk '{print $2"\t"$1}' | awk '{a[$1]+=$2}END{for(k in a)print k"\t"a[k]}') -u -p 0 --b_header | sed "1s/V1/$time/" > tmp
# 	mv tmp all.tp.peak.length.QN.merged.tsv
# done &&

# 8.3. add range of extension to gene body
# (0 --> K36me3, K20me1; 2000 --> all other marks)
# myRange=0 &&

# 8.4. compute gene length
# /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/join.py -b all.tp.peak.length.QN.merged.tsv -a <(awk -v myRange=$myRange 'BEGIN{FS=OFS="\t"}{if ($6=="+") {$2=$2-myRange} else {$3=$3+myRange}; print $0}' /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/analysis/all.marks/bed.files/gene.body.bed | awk '{print $3-$2"\t"$4}' | cut -d "." -f1 | awk '{print $2"\t"$1}') --b_header | sed '1s/V1/gene_length/' > tmp; mv tmp all.tp.peak.length.QN.merged.tsv &&
#*****

#*****
# 9. perform polynomial regression

# 9.1. expression matrix
# ~/software/R-3.5.2/bin/Rscript /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/loess.polynomial.regression.R -i expression.matrix.tsv -o expression.matrix.pr.tsv &&

# 9.2. H4K20me1 matrix
# ~/software/R-3.5.2/bin/Rscript /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/loess.polynomial.regression.R -i H4K20me1.matrix.tsv -o H4K20me1.matrix.pr.tsv &&
#*****

#*****
# 10. select genes with a peak in the region of interest in at least one time point

# 10.1. load conda env
conda activate ERC_human &&

# 10.2. define regions of interest
# gene body --> K36me3, K20me1
# [-2 Kb, +2 Kb] --> all other marks
myBed="/no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/analysis/all.marks/bed.files/gene.body.bed" &&

# 10.3. compute intersection
cat ../H4K20me1.Zerone.peaks.txt | while read file; do bedtools intersect -a $myBed -b $file; done | cut -f7 | sort -u | cut -d "." -f1 > all.genes.intersecting.peaks.tsv &&
grep -Fx -f all.genes.intersecting.peaks.tsv <(tail -n+2 expression.matrix.tsv | cut -f1) > genes.intersecting.peaks.tsv
#*****

#*****
# 11. set-up for NW alignments

# 11.1. prepare folder to store
# NW alignments
# mkdir NW.pr &&

# 11.2. prepare z-score matrix
# /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/NW.generate.input.matrix.sh --expression expression.matrix.pr.tsv --mark H4K20me1.matrix.pr.tsv --outFile NW.pr/H4K20me1.NW.input.matrix.tsv
#*****

#*****
# 12. define the 6 groups of genes
# ~/software/R-3.5.2/bin/Rscript /no_backup/rg/bborsari/projects/ERC/human/2018-01-19.chip-nf/Borsari_et_al/bin/define.6.groups.R -d metadata.tsv -e expression.matrix.tsv -m H4K20me1.matrix.tsv -a NW.pr/H4K20me1.FDR.table.all.genes.tsv -C all.tp.peak.length.QN.merged.tsv -G genes.intersecting.peaks.tsv -s H4K20me1.QN.merged.maSigPro.out.tsv -o H4K20me1.6.groups.tsv
#*****
